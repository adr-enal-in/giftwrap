// Generated by CoffeeScript 1.3.3
(function() {
  var createRefreshTimeout, jsTimeToDateTime, jsTimeToDays, jsTimeToHours, jsTimeToMinutes, jsTimeToSeconds, loadSettings, refreshTimeout, refreshTimeoutStatus, relativeTime;

  ({
    Queue: {
      getStatusClass: function(status) {
        if (status === "finished") {
          return "label-success";
        }
        if (status === "error") {
          return "label-error";
        }
        return "";
      }
    }
  });

  createRefreshTimeout = function() {
    return setTimeout(function() {
      return window.location.reload(true);
    }, 30000);
  };

  refreshTimeout = createRefreshTimeout();

  refreshTimeoutStatus = true;

  jsTimeToDateTime = function(jsTime) {};

  jsTimeToSeconds = function(jsTime) {
    return jsTime * .001;
  };

  jsTimeToMinutes = function(jsTime) {
    return Math.round(jsTimeToSeconds(jsTime) / 60);
  };

  jsTimeToHours = function(jsTime) {
    return Math.round(jsTimeToMinutes(jsTime) / 60);
  };

  jsTimeToDays = function(jsTime) {
    return Math.round(jsTimeToHours(jsTime) / 24);
  };

  relativeTime = function(timeInPast) {
    var days, hours, minutes, now;
    now = Date.now();
    minutes = jsTimeToMinutes(now - timeInPast);
    hours = jsTimeToHours(now - timeInPast);
    days = jsTimeToDays(now - timeInPast);
    if (minutes === 0) {
      return "less than a minute ago";
    }
    if (minutes === 1) {
      return "a minute ago";
    }
    if (minutes < 45) {
      return "" + minutes + " min ago";
    }
    if (minutes < 90) {
      return "about 1 hr ago";
    }
    if (minutes < 1440) {
      return "about " + hours + " hrs ago";
    }
    if (minutes < 2880) {
      return "1 day ago";
    }
    if (minutes < 43200) {
      return "" + days + " days ago";
    }
    return "over " + jsTimeToHours(timeInPast) + " years ago";
  };

  loadSettings = function() {};

  $(document).ready(function() {
    $("#auto-refresh").button('toggle');
    $("#auto-refresh").click(function() {
      if (refreshTimeoutStatus) {
        clearTimeout(refreshTimeout);
        refreshTimeoutStatus = false;
      } else {
        refreshTimeout = createRefreshTimeout();
        refreshTimeoutStatus = true;
      }
      return true;
    });
    $("time.relative").each(function() {
      var time;
      time = $(this).text();
      return $(this).text(relativeTime(time));
    });
    $("time.elapsed").each(function() {
      var time;
      time = $(this).text();
      return $(this).text(jsTimeToMinutes(time) + " min");
    });
    return this;
  });

}).call(this);
